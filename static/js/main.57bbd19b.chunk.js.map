{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","console","log","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACnBC,OAAQ,CACNC,KAAM,qBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,gBACNC,SAAU,eA0BCE,EAbO,SAACC,GACrB,IAViBC,EAAKC,EAUhBC,GAVWF,EAUQD,EAAMC,KAVTC,GAUc,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAOtBJ,EAAYH,EAAaS,GAAzBN,SAER,OACES,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBP,IAChCG,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBb,EAAxB,WACZS,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,KAAGC,UAAS,uBAAAC,OAAyBb,EAAzB,aC7BZc,EAAU,SAACX,GACf,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZT,EAAMY,WAQfD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCbTG,6MAEJC,MAAQ,CAAEd,IAAK,KAAMe,aAAc,uFAGd,IAAAC,EAAAC,KACnBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAACvB,IAAKsB,EAASE,OAAOC,YAChD,SAAAC,GAAG,OAAIV,EAAKO,SAAS,CAACR,aAAcW,EAAIf,yDAK1CgB,QAAQC,IAAI,sDAKZ,OAAIX,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMd,IAClCK,EAAAC,EAAAC,cAAA,sBAAcU,KAAKH,MAAMC,eAE7BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMd,IAClCK,EAAAC,EAAAC,cAACsB,EAAD,CAAe7B,IAAKiB,KAAKH,MAAMd,MAEjCK,EAAAC,EAAAC,cAACuB,EAAD,CAASnB,QAAQ,oEAMxB,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZS,KAAKc,wBAhCIC,IAAMC,WAsCxBC,IAASC,OACP9B,EAAAC,EAAAC,cAAC6B,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.57bbd19b.chunk.js","sourcesContent":["import './SeasonDisplay.css'\nimport React from 'react'\n\nconst seasonConfig = {\n  summer: {\n    text: 'Lets hit the beach',\n    iconName: 'sun'\n  },\n  winter: {\n    text: 'Burr its cold',\n    iconName: 'snowflake'\n  }\n}\n\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter'\n  } else {\n    return lat > 0 ? 'winter' : 'summer'\n  }\n}\n\n//Component\nconst SeasonDisplay = (props) => {\n  const season = getSeason(props.lat, new Date().getMonth())\n  const { iconName} = seasonConfig[season] // {text, iconName}\n\n  return (\n    <div className={`season-display ${season}`}>\n      <i className={` icon-left massive ${iconName} icon`} />\n      <h1>{season}</h1>\n      <i className={` icon-right massive ${iconName} icon`} />\n    </div>\n  )\n}\n\nexport default SeasonDisplay\n","import React from 'react'\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">\n        {props.message}\n      </div>\n    </div>\n  )\n}\n\n// if we dont put in props.message,\n// this will be default message\nSpinner.defaultProps = {\n  message: 'Loading...'\n}\n\nexport default Spinner\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport SeasonDisplay from './SeasonDisplay'\nimport Spinner from './Spinner'\n\nclass App extends React.Component {\n  // initializing this.state\n  state = { lat: null, errorMessage: ''}\n\n  // lifecycle method\n  componentDidMount () {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({lat: position.coords.latitude}),\n      err => this.setState({errorMessage: err.message})\n    )\n  }\n\n  componentDidUpdate () {\n    console.log('it updated')\n  }\n\n  // function with logic on rendering content = helper method\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div> Error: {this.state.errorMessage}</div>\n    }\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat}/>\n    }\n    return <Spinner message=\"Please accept location request\"/>\n  }\n\n  //have to define render method or give it logic\n  // and conditions\n  render() {\n    return (\n      <div className='border red'>\n        {this.renderContent()}\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}