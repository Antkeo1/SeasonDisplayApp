{"ast":null,"code":"import _classCallCheck from \"/Users/antkeo/Code/project/seasons/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antkeo/Code/project/seasons/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antkeo/Code/project/seasons/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antkeo/Code/project/seasons/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antkeo/Code/project/seasons/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antkeo/Code/project/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    state = {\n      lat: null,\n      errorMessage: ''\n    };\n    return _this;\n  } // lifecycle methods\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.navigator.geolocation.getCurrentPosition(function (position) {\n        return _this2.setState({\n          lat: position.coords.latitude\n        });\n      }, function (err) {\n        return _this2.setState({\n          errorMessage: err.message\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('it updated');\n    } //have to define render method or give it logic\n    // and conditions\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.errorMessage && !this.state.late) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \" Error: \", this.state.errorMessage);\n      }\n\n      if (!this.state.errorMessage && this.state.lat) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Latitude: \", this.state.lat);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading!\");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/antkeo/Code/project/seasons/src/index.js"],"names":["React","ReactDOM","App","props","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","console","log","late","Component","render","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,G;;;;;AACJ,eAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,6EAAMA,KAAN;AACAC,IAAAA,KAAK,GAAG;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KAAR;AAFkB;AAGnB,G,CAED;;;;;wCACqB;AAAA;;AACnBC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACE,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAACP,UAAAA,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,SAAd,CAAJ;AAAA,OADV,EAEE,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACH,QAAL,CAAc;AAACN,UAAAA,YAAY,EAAES,GAAG,CAACC;AAAnB,SAAd,CAAJ;AAAA,OAFL;AAID;;;yCAEqB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,K,CAED;AACA;;;;6BACS;AACP,UAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWe,IAA3C,EAAiD;AAC/C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKf,KAAL,CAAWE,YAAzB,CAAP;AACD;;AACD,UAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB,KAAKD,KAAL,CAAWC,GAA3B,CAAP;AACD;;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;;;EA5BeL,KAAK,CAACoB,S;;AA+BxBnB,QAAQ,CAACoB,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    state = { lat: null, errorMessage: ''}\n  }\n\n  // lifecycle methods\n  componentDidMount () {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({lat: position.coords.latitude}),\n      err => this.setState({errorMessage: err.message})\n    )\n  }\n\n  componentDidUpdate () {\n    console.log('it updated')\n  }\n\n  //have to define render method or give it logic\n  // and conditions\n  render() {\n    if (this.state.errorMessage && !this.state.late) {\n      return <div> Error: {this.state.errorMessage}</div>\n    }\n    if (!this.state.errorMessage && this.state.lat) {\n      return <div>Latitude: {this.state.lat}</div>\n    }\n    return <div>Loading!</div>\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)\n"]},"metadata":{},"sourceType":"module"}